#header()

from wpilib import PIDCommand
from robot import Robot, RobotMap

#set($command = $helper.getByName($command-name, $robot))
class #class($command.name)(PIDCommand):
    def __init__(self):
#@autogenerated_code("pid", "        ")
#parse("${exporter-path}commands/PIDCommand-pid.py")
#end

        # Use Requires() here to declare subsystem dependencies
        # eg. self.Requires(chassis)

#@autogenerated_code("requires", "        ")
#parse("${exporter-path}commands/Command-requires.py")
#end

    def ReturnPIDInput(self):
        # Return your input value for the PID loop
        # e.g. a sensor, like a potentiometer:
        # yourPot.GetAverageVoltage() / kYourMaxVoltage

#@autogenerated_code("source", "        ")
#parse("${exporter-path}commands/PIDCommand-source.py")
#end

    def UsePIDOutput(self, output):
        # Use output to drive your system, like a motor
        # e.g. yourMotor.Set(output)

#@autogenerated_code("output", "        ")
#parse("${exporter-path}commands/PIDCommand-output.py")
#end

    def Initialize(self):
        """Called just before this Command runs the first time"""
        pass

    def Execute(self):
        """Called repeatedly when this Command is scheduled to run"""
        pass

    def IsFinished(self):
        """Make this return True when this Command no longer needs to run
        Execute()"""
        return False

    def End(self):
        """Called once after IsFinished returns True"""
        pass

    def Interrupted(self):
        """Called when another command which requires one or more of the same
        subsystems is scheduled to run"""
        pass
